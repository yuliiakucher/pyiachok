# Generated by Django 3.1 on 2020-08-27 10:50

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='NewsTypeModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'newstype',
            },
        ),
        migrations.CreateModel(
            name='PlaceModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('address', models.CharField(max_length=50)),
                ('contacts', models.CharField(max_length=70)),
                ('statistic_views', models.IntegerField(default=0)),
                ('passed_moderation', models.BooleanField(default=False)),
                ('email', models.EmailField(max_length=30, unique=True)),
            ],
            options={
                'db_table': 'place',
            },
        ),
        migrations.CreateModel(
            name='ProfileModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sex', models.CharField(max_length=30)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'profile',
            },
        ),
        migrations.CreateModel(
            name='SpecificityModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specificity_name', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'specificity',
            },
        ),
        migrations.CreateModel(
            name='TagModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_name', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'tag',
            },
        ),
        migrations.CreateModel(
            name='TypeModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_name', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'type',
            },
        ),
        migrations.CreateModel(
            name='ScheduleModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mon_open', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^(([0-1]{0,1}[0-9])|(2[0-3])):[0-5]{0,1}[0-9]$')])),
                ('mon_close', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^(([0-1]{0,1}[0-9])|(2[0-3])):[0-5]{0,1}[0-9]$')])),
                ('tue_open', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^(([0-1]{0,1}[0-9])|(2[0-3])):[0-5]{0,1}[0-9]$')])),
                ('tue_close', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^(([0-1]{0,1}[0-9])|(2[0-3])):[0-5]{0,1}[0-9]$')])),
                ('wed_open', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^(([0-1]{0,1}[0-9])|(2[0-3])):[0-5]{0,1}[0-9]$')])),
                ('wed_close', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^(([0-1]{0,1}[0-9])|(2[0-3])):[0-5]{0,1}[0-9]$')])),
                ('thu_open', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^(([0-1]{0,1}[0-9])|(2[0-3])):[0-5]{0,1}[0-9]$')])),
                ('thu_close', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^(([0-1]{0,1}[0-9])|(2[0-3])):[0-5]{0,1}[0-9]$')])),
                ('fri_open', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^(([0-1]{0,1}[0-9])|(2[0-3])):[0-5]{0,1}[0-9]$')])),
                ('fri_close', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^(([0-1]{0,1}[0-9])|(2[0-3])):[0-5]{0,1}[0-9]$')])),
                ('sat_open', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^(([0-1]{0,1}[0-9])|(2[0-3])):[0-5]{0,1}[0-9]$')])),
                ('sat_close', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^(([0-1]{0,1}[0-9])|(2[0-3])):[0-5]{0,1}[0-9]$')])),
                ('sun_open', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^(([0-1]{0,1}[0-9])|(2[0-3])):[0-5]{0,1}[0-9]$')])),
                ('sun_close', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^(([0-1]{0,1}[0-9])|(2[0-3])):[0-5]{0,1}[0-9]$')])),
                ('place', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='schedule', to='api.placemodel')),
            ],
            options={
                'db_table': 'schedule',
            },
        ),
        migrations.CreateModel(
            name='PyiachokModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('purpose', models.CharField(max_length=150)),
                ('sex', models.CharField(max_length=1, validators=[django.core.validators.RegexValidator('^([fma])$', 'only f/m/a')])),
                ('number_of_people', models.IntegerField()),
                ('payer', models.CharField(max_length=20)),
                ('expenditures', models.IntegerField()),
                ('public', models.BooleanField(default=True)),
                ('participants', models.ManyToManyField(related_name='active_pyiachky', to='api.ProfileModel')),
                ('place_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pyiachky', to='api.placemodel')),
                ('requests', models.ManyToManyField(related_name='pyiachok_requests', to='api.ProfileModel')),
            ],
            options={
                'db_table': 'pyiachok',
            },
        ),
        migrations.AddField(
            model_name='placemodel',
            name='admins',
            field=models.ManyToManyField(related_name='moderated_places', to='api.ProfileModel'),
        ),
        migrations.AddField(
            model_name='placemodel',
            name='fav',
            field=models.ManyToManyField(related_name='favourites_places', to='api.ProfileModel'),
        ),
        migrations.AddField(
            model_name='placemodel',
            name='owner_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_places', to='api.profilemodel'),
        ),
        migrations.AddField(
            model_name='placemodel',
            name='specificities',
            field=models.ManyToManyField(related_name='places', to='api.SpecificityModel'),
        ),
        migrations.AddField(
            model_name='placemodel',
            name='tags',
            field=models.ManyToManyField(related_name='places', to='api.TagModel'),
        ),
        migrations.AddField(
            model_name='placemodel',
            name='type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='place', to='api.typemodel'),
        ),
        migrations.CreateModel(
            name='PhotoModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(default='', upload_to='places\\img')),
                ('places', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='api.placemodel')),
            ],
            options={
                'db_table': 'photos',
            },
        ),
        migrations.CreateModel(
            name='NewsModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
                ('photo', models.ImageField(default='', upload_to='news\\img')),
                ('text', models.TextField(max_length=1000)),
                ('place_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='news', to='api.placemodel')),
                ('type', models.ManyToManyField(related_name='news', to='api.NewsTypeModel')),
            ],
            options={
                'db_table': 'news',
            },
        ),
        migrations.CreateModel(
            name='NewsDurationModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_start', models.DateTimeField()),
                ('date_end', models.DateTimeField()),
                ('news', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='duration', to='api.newsmodel')),
            ],
            options={
                'db_table': 'news_duration',
            },
        ),
        migrations.CreateModel(
            name='CoordinatesModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lat', models.CharField(max_length=20)),
                ('lng', models.CharField(max_length=20)),
                ('place', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='coordinates', to='api.placemodel')),
            ],
            options={
                'db_table': 'coordinates',
            },
        ),
        migrations.CreateModel(
            name='CommentModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate', models.IntegerField(validators=[django.core.validators.MaxValueValidator(10)])),
                ('text', models.TextField(max_length=800)),
                ('bill', models.IntegerField()),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='api.placemodel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='api.profilemodel')),
            ],
            options={
                'db_table': 'comment',
            },
        ),
        migrations.CreateModel(
            name='ChatCommentModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(max_length=1000)),
                ('date', models.DateTimeField(auto_now=True)),
                ('pyiachok_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_comments', to='api.pyiachokmodel')),
                ('users', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_comments', to='api.profilemodel')),
            ],
            options={
                'db_table': 'chat_comment',
            },
        ),
    ]
